##uygulama ismi
spring.application.name=spring-data-jpa
## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
## veritaban?nda schema default vermek için
spring.jpa.properties.hibernate.default_schema=student
## veritaban? kullan?c? ad?
spring.datasource.username=postgres
##veritaban? ?ifresi
spring.datasource.password=1

## ilk aç?l??ta create ile aç?lmas? gerekebilir. nas?l aya?a kalkaca??.
spring.jpa.hibernate.ddl-auto=update
## tablolar? olu?tururken veritaban?na i?lem yaparken sql kodlar?n? gösterir
spring.jpa.show-sql=true
## sql ko?dlar? düzgün formatta göster
spring.jpa.properties.hibernate.format_sql=true

#Bu de?erler @ConfigurationProperties anotasyonu kullan?m? için olu?turuldu
app.servers[0].ip = 192.168.1.2
app.servers[0].location = Almanya

app.servers[1].ip = 192.168.2.2
app.servers[1].location = Hollanda

app.servers[2].ip = 192.168.2.3
app.servers[2].location = ABD

key= ASDASD123

# @PropertySource --> farkl? properties dosyas? için
# @Value --> properties dosyas?nda okunacak de?erler için
# ConfigurationProperties --> daha kompleks verileri okumak için kullan?l?r. Value sade / ConfigurationProperties karma??k veriler
# Bu anotasyonlar bir biri içerisinde de kullan?labilir.
